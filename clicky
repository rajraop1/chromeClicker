from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# Function to check if an element is within the visible viewport
def is_element_in_viewport(driver, element):
    return driver.execute_script("""
        var rect = arguments[0].getBoundingClientRect();
        return (rect.top >= 0 && rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth));
    """, element)

# Setup WebDriver
driver = webdriver.Chrome()

# Open the URL
driver.get("abcd.url")

# List of button texts to check
button_texts = ["Approve All", "Continue", "Login"]

# Loop to keep checking for visible buttons and click if found
while True:
    # Find all elements that might be buttons
    elements = driver.find_elements(By.XPATH, "//*[text()='Approve All' or text()='Continue' or text()='Login']")

    # Filter elements to only those that are visible in the viewport
    visible_buttons = [element for element in elements if is_element_in_viewport(driver, element)]

    # If a visible button is found, click it and break the loop
    if visible_buttons:
        visible_buttons[0].click()
        print(f"Clicked on: {visible_buttons[0].text}")
        time.sleep(2)  # Wait for any possible page changes before continuing
    else:
        print("No relevant button found, waiting...")
    
    # Pause before checking again to avoid excessive CPU usage
    time.sleep(1)

# Close the browser after task is done
driver.quit()
